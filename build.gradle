plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'antlr'
}
group = 'de.uni-bamberg.pi'
version = '0.0.1-SNAPSHOT'

description = """testcasegenerator"""

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}



repositories {
    jcenter()
}
dependencies {
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
    implementation group: 'com.github.curious-odd-man', name: 'rgxgen', version: '1.3'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version: '1.12.30'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-logs', version: '1.12.30'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-cloudwatch', version: '1.12.30'


    testImplementation group: 'junit', name: 'junit', version:'3.8.1'
    antlr "org.antlr:antlr4:4.5"
}
/*
generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages"]
    doLast {
        println "Copying generated grammar lexer/parser files to main directory."
        copy {
            from "${buildDir}/generated-src/antlr/main"
            into "src/main/java/antlr"
        }
    }
}
*/
javafx {
    version = "14"
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml' ]
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}

mainClassName = 'gui.view.MainApp'